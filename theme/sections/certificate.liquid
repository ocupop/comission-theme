{%- capture contentForQuerystring -%}{{ content_for_header }}{%- endcapture -%}
{% comment %} Use string splitting to pull the value from content_for_header and apply some string clean up {% endcomment %}
{%- assign pageUrl = contentForQuerystring
  | split: '"pageurl":"'
  | last
  | split: '"'
  | first
  | split: '.myshopify.com'
  | last
  | replace: '\/', '/'
  | replace: '%20', ' '
  | replace: '\u0026', '&'
-%}

{%- assign pageQuerystring = pageUrl | split: '?' | last -%}
{%- assign queryArray = pageQuerystring | split: '&' -%}

{% for item in queryArray %}
  {%- assign keyValue = item | split: '=' -%}

  {% if keyValue[0] == 'product' %}
    {% assign productId = keyValue[1] | plus: 0 %}
  {% endif %}
  {% if keyValue[0] == 'dab' %}
    {% assign position = keyValue[1] %}
  {% endif %}
  {% if keyValue[0] == 'collector' %}
    {% assign collector = keyValue[1] %}
  {% endif %}
  {% if keyValue[0] == 'tile' %}
    {% assign tile = keyValue[1] %}
  {% endif %}
{%- endfor -%}

<!-- FOR DEVELOPMENT -->
{% comment %}
  {% assign productId = 7464738947251 %}
  {% assign position = 4663 %}
{% endcomment %}

{% for p in collections.all.products %}
  {% if productId == p.id %}
    {% assign product = p %}
  {% endif %}
{% endfor %}

{% unless product %}
  <h1>Product Not Found</h1>
{% endunless %}

{% assign product_meta = product.metafields.comission %}
{% comment %}
  {% unless product_meta.tiles %}
    <h1>No Sold Tiles for this product!</h1>
  {% endunless %}
{% endcomment %}

{% assign artist_id = product_meta.artist | split: '/' | last | plus: 0 %}

{% assign museum_id = product_meta.institution | split: '/' | last | plus: 0 %}

{% for coll in collections %}
  {% if artist_id == coll.id %}
    {% assign artist = coll %}
  {% endif %}

  {% if museum_id == coll.id %}
    {% assign museum = coll %}
  {% endif %}
{% endfor -%}

<!-- BEGIN CERTIFICATE -->
<div
  class="__react-component responsive certificate-component"
  data-component="Certificate"
  data-position="{{ position }}"
  {% comment %}
    "collector" and "tilepath" is optional. if it does not exist, it will be extracted from the product metafields
  {% endcomment %}
  data-collector="{{ collector | replace: "'", "&apos;" | replace: "+", " " | escape }}"
  data-tilepath="{{ tile | escape }}"

  data-product="{{ product | json | replace: "'", "&apos;" | escape }}"
  data-productmetafields="{{ product_meta | json | replace: "'", "&apos;" | escape }}"
  data-museum="{{ museum | json | replace: "'", "&apos;" | escape }}"
  data-artist="{{ artist | json | replace: "'", "&apos;" | escape }}"
  data-location="{{ museum.metafields.comission.location | replace: "'", "&apos;" | escape }}"
></div>

{% schema %}
{
  "name": "t:sections.main-page.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
